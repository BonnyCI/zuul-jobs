- name: Require tox_envlist variable - {{ tox_envlist }}
  fail:
    msg: "tox_envlist is required for this role"
  when: tox_envlist is not defined

- name: Create my_tox_environment variable
  set_fact:
    my_tox_environment: "{{ tox_environment_defaults | combine(tox_environment) }}"

- name: Run tox
  args:
    chdir: "{{ zuul_work_dir }}"
    executable: /bin/bash
  environment: "{{ my_tox_environment }}"
  shell: |
    # If a bundle file is present, call tox with the jenkins version of
    # the test environment so it is used.  Otherwise, use the normal
    # (non-bundle) test environment.

    venv={{ tox_envlist }}

    function process_testr_artifacts {
        if [ ! -d ".testrepository" ] ; then
            return
        fi

        if [ -f ".testrepository/0.2" ] ; then
            cp .testrepository/0.2 ./testrepository.subunit
        elif [ -f ".testrepository/0" ] ; then
            $bin_path/testr last --subunit > ./testrepository.subunit
        fi
        /usr/os-testr-env/bin/subunit2html ./testrepository.subunit testr_results.html
        gzip -9 ./testr_results.html

        rancount=$($bin_path/testr last | sed -ne 's/Ran \([0-9]\+\).*tests in.*/\1/p')
        if [ -z "$rancount" ] || [ "$rancount" -eq "0" ] ; then
            echo
            echo "Zero tests were run. At least one test should have been run."
            echo "Failing this test as a result"
            echo
            exit 1
        fi
    }

    function check_nose_html {
        htmlreport=$(find . -name $NOSE_HTML_OUT_FILE)
        if [ -f "$htmlreport" ]; then
            passcount=$(grep -c 'tr class=.passClass' $htmlreport)
            if [ $passcount -eq "0" ]; then
                echo
                echo "Zero tests passed, which probably means there was an error"
                echo "parsing one of the python files, or that some other failure"
                echo "during test setup prevented a sane run."
                echo
                exit 1
            fi
        fi
    }

    script_path=/usr/local/jenkins/slave_scripts
    bin_path=.tox/$venv/bin

    export PYTHON=$bin_path/python
    cat /etc/image-hostname.txt

    $script_path/jenkins-oom-grep.sh pre

    sudo $script_path/jenkins-sudo-grep.sh pre

    tox -vv -e$venv
    result=$?

    process_testr_artifacts
    check_nose_html

    exit $result
